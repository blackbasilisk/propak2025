extends layout

block content
  div.content
    h1= title 
    // Checkboxes
    label
      input(type="checkbox" name="isBODPrint" id="isBODPrint")
      | GK + UP (Corrugate Marking)
    label
      input(type="checkbox" name="isHRPrint" id="isHRPrint")
      | HR
    label
      input(type="checkbox" name="isSCPrint" id="isSCPrint")
      | SC 2.0
    label
      input(type="checkbox" name="isEidosPrint" id="isEidosPrint")
      | Eidos
    label
      input(type="checkbox" name="isLaserPrint" id="isLaserPrint")
      | Laser
    label
      input(type="checkbox" name="isDSPrint" id="isDSPrint")
      | DS
    label
      input(type="checkbox" name="isColorJetPrint" id="isColorJetPrint")
      | ColorJet 2      

    // Scan button
    button#scanButton Scan
    pre#customer-info
  // Modal popup for QR code scanner
  div#qrModal.modal(style="display:none;")
    div.modal-content
      div#reader-container
        div#reader
      button#closeModal Close

  script(src='https://unpkg.com/html5-qrcode')
  script.
    const html5QrCode = new Html5Qrcode("reader");

    let errorShown = false;
    let isProcessing = false;

    function logErrorToServer(message) {
      fetch('/api/log-error', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ message }),
      }).catch(err => {
        console.error('Error logging ERROR to server:', err);
      });
    }

     function logInfoToServer(message) {
      fetch('/api/log-info', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ message }),
      }).catch(err => {
        console.error('Error logging INFO to server:', err);
      });
    }

    function onScanSuccess(decodedText, decodedResult) {
      if (isProcessing) return; // Prevent multiple API calls
      isProcessing = true;

      // Handle the scanned code
      logInfoToServer(`Code matched = ${decodedText}, ${JSON.stringify(decodedResult)}`);
      
      // Stop the QR code scanner
      html5QrCode.stop().then(() => {
        // Close the modal
        document.getElementById('qrModal').style.display = 'none';
        document.querySelector('.content').classList.remove('modal-open');
        // Get checkbox values
        const isHRPrint = document.getElementById('isHRPrint').checked;
        const isBODPrint = document.getElementById('isBODPrint').checked;
        const isSCPrint = document.getElementById('isSCPrint').checked;
        const isEidosPrint = document.getElementById('isEidosPrint').checked;
        const isLaserPrint = document.getElementById('isLaserPrint').checked;
        const isDSPrint = document.getElementById('isDSPrint').checked;
        const isColorJetPrint = document.getElementById('isColorJetPrint').checked;
        // Save the scanned result and checkbox values to the database
        fetch('/api/save-scan-info', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ ScannedCode: decodedText, isHRPrint, isBODPrint, isSCPrint, isEidosPrint, isLaserPrint, isDSPrint, isColorJetPrint }),
        })
        .then(response => response.json())
        .then(data => {
          if (data.success) {
            logInfoToServer('QR code and checkbox values saved successfully');
            // Redirect to scan-result page with the scanned data
            window.location.href = `/scan-result?qrCode=${encodeURIComponent(decodedText)}`;
          } else {
            handleError(`Error saving scan result: ${data.message}`);
          }
        })
        .catch(error => {          
          handleError(`Error saving QR code and checkbox values: ${error.message}`);
        });
      }).catch(err => {
        handleError(`Error stopping QR code scanner: ${err}`);
      });
    }

    function onScanFailure(error) {
      // Handle scan failure, usually better to ignore and keep scanning.
      console.warn(`Code scan error = ${error}`);
      //alert('Unable to detect QR code. Please try again.');
    }

    function handleError(message) {
      if (!errorShown) {
        logErrorToServer(message);
        alert(message);
        errorShown = true;
        // Redirect to home page
        window.location.href = '/';
      }
    }

    document.addEventListener('DOMContentLoaded', function() {
      document.getElementById('scanButton').addEventListener('click', function() {
        errorShown = false; // Reset the error flag when the scan button is clicked
        isProcessing = false; // Reset the processing flag when the scan button is clicked
        document.getElementById('qrModal').style.display = 'flex';
        document.querySelector('.content').classList.add('modal-open');
        html5QrCode.start(
          { facingMode: "environment" }, // Use rear camera
          {
            fps: 10,    // Scans per second
            qrbox: { width: 250, height: 250 }  // QR code scanning box
          },
          onScanSuccess,
          onScanFailure
        ).catch(err => {
          handleError(`Error starting QR code scanner: ${err}`);
        });
      });

      document.getElementById('closeModal').addEventListener('click', function() {
        document.getElementById('qrModal').style.display = 'none';
        document.querySelector('.content').classList.remove('modal-open');
        html5QrCode.stop().catch(err => logErrorToServer(`Error stopping QR code scanner: ${err}`));
      });
    });